{"version":3,"file":"index.js","mappings":"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UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://myblocks/./src/aaa-testing-block/index.jsx","webpack://myblocks/./src/edit.js","webpack://myblocks/./src/index.jsx","webpack://myblocks/./src/save.js","webpack://myblocks/./src/zaz-inspectorcontrol-block/index.jsx","webpack://myblocks/./src/zaz-textalignmentoolbar-block/index.jsx","webpack://myblocks/./src/editor.scss","webpack://myblocks/./src/zaz-textalignmentoolbar-block/style.scss","webpack://myblocks/external window \"React\"","webpack://myblocks/external window [\"wp\",\"blockEditor\"]","webpack://myblocks/external window [\"wp\",\"blocks\"]","webpack://myblocks/external window [\"wp\",\"components\"]","webpack://myblocks/external window [\"wp\",\"i18n\"]","webpack://myblocks/webpack/bootstrap","webpack://myblocks/webpack/runtime/chunk loaded","webpack://myblocks/webpack/runtime/compat get default export","webpack://myblocks/webpack/runtime/define property getters","webpack://myblocks/webpack/runtime/hasOwnProperty shorthand","webpack://myblocks/webpack/runtime/make namespace object","webpack://myblocks/webpack/runtime/jsonp chunk loading","webpack://myblocks/webpack/before-startup","webpack://myblocks/webpack/startup","webpack://myblocks/webpack/after-startup"],"sourcesContent":["import { registerBlockType } from '@wordpress/blocks';\nimport { InspectorControls, PanelColorSettings } from '@wordpress/block-editor';\nimport { RichText } from '@wordpress/block-editor';\nimport { PanelBody, RangeControl } from '@wordpress/components';\n\n\n// Register the block\nregisterBlockType('your-plugin/your-block', {\n    title: 'Custom Block',\n    icon: 'editor-textcolor',\n    category: 'common',\n    attributes: {\n        content: {\n            type: 'array',\n            source: 'children',\n            selector: 'p',\n        },\n        backgroundColor: {\n            type: 'string',\n            default: '#ffffff', // default background color\n        },\n        textColor: {\n            type: 'string',\n            default: '#000000', // default text color\n        },\n    },\n\n    edit: ({ attributes, setAttributes }) => {\n        const { content, backgroundColor, textColor } = attributes;\n\n        return (\n            <div\n                style={{\n                    backgroundColor,\n                    color: textColor,\n                    padding: '20px',\n                }}\n            >\n                <InspectorControls>\n                    <PanelBody title=\"Color Settings\">\n                        <PanelColorSettings\n                            title=\"Background Color\"\n                            colorSettings={[\n                                {\n                                    label: 'Choose Background Color',\n                                    value: backgroundColor,\n                                    onChange: (newColor) =>\n                                        setAttributes({ backgroundColor: newColor }),\n                                },\n                            ]}\n                        />\n                        <PanelColorSettings\n                            title=\"Text Color\"\n                            colorSettings={[\n                                {\n                                    label: 'Choose Text Color',\n                                    value: textColor,\n                                    onChange: (newColor) =>\n                                        setAttributes({ textColor: newColor }),\n                                },\n                            ]}\n                        />\n                    </PanelBody>\n                </InspectorControls>\n                <RichText\n                    tagName=\"p\"\n                    value={content}\n                    onChange={(newContent) => setAttributes({ content: newContent })}\n                />\n            </div>\n        );\n    },\n\n    save: ({ attributes }) => {\n        const { content, backgroundColor, textColor } = attributes;\n\n        return (\n            <div\n                style={{\n                    backgroundColor,\n                   textColor,\n                    padding: '20px',\n                }}\n            >\n                <RichText.Content tagName=\"p\" value={content} />\n            </div>\n        );\n    },\n});\n","import { __ } from '@wordpress/i18n';\nimport { useBlockProps } from '@wordpress/block-editor';\nimport './editor.scss';\n\nexport default function Edit() {\n\t\n\treturn (\n\t\t<p { ...useBlockProps() }>\n\t\t\t{ __( 'Myblocks – hello from the editor!qq', 'myblocks' ) }\n\t\t</p>\n\t);\n}\n","import { registerBlockType } from '@wordpress/blocks';\nimport Edit from './edit';\nimport save from './save';\nimport metadata from './block.json'; \n\nimport './aaa-testing-block';\nimport \"./zaz-textalignmentoolbar-block\";\nimport \"./zaz-inspectorcontrol-block\";\n\n\n\n\n\n","import { useBlockProps } from '@wordpress/block-editor';\n\nexport default function save() {\n\treturn (\n\t\t<p { ...useBlockProps.save() }>\n\t\t\t{ 'Myblocks – hello from the saved content!333' }\n\t\t</p>\n\t);\n}\n","import { registerBlockType } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\nimport { TextControl } from '@wordpress/components';\n\nimport {\n    useBlockProps,\n    ColorPalette,\n    InspectorControls,\n} from '@wordpress/block-editor';\n\nregisterBlockType( 'zaz-inspectorcontrol/myblocks', {\n    apiVersion: 3,\n     title: __( 'ZAZ - Inspector Control', 'myblocks' ),\n     icon: 'universal-access-alt',\n    attributes: {\n        message: {\n            type: 'string',\n            source: 'text',\n            selector: 'div',\n            default: '', \n        },\n        bg_color: {\n               type: 'string', \n               default: '#000000' },\n        text_color: {\n           type: 'string',\n            default: '#ffffff' },\n    },\n    edit: ( { attributes, setAttributes } ) => {\n        const onChangeBGColor = ( hexColor ) => {\n            setAttributes( { bg_color: hexColor } );\n        };\n\n        const onChangeTextColor = ( hexColor ) => {\n            setAttributes( { text_color: hexColor } );\n        };\n\n        return (\n            <div { ...useBlockProps() }>\n                <InspectorControls key=\"setting\">\n                    <div id=\"gutenpride-controls\">\n                        <fieldset>\n                            <legend className=\"blocks-base-control__label\">\n                                { __( 'Background color', 'gutenpride' ) }\n                            </legend>\n                            <ColorPalette // Element Tag for Gutenberg standard colour selector\n                                onChange={ onChangeBGColor } // onChange event callback\n                            />\n                        </fieldset>\n                        <fieldset>\n                            <legend className=\"blocks-base-control__label\">\n                                { __( 'Text color', 'gutenpride' ) }\n                            </legend>\n                            <ColorPalette // Element Tag for Gutenberg standard colour selector\n                                onChange={ onChangeTextColor } // onChange event callback\n                            />\n                        </fieldset>\n                    </div>\n                </InspectorControls>\n\n\n                <TextControl\n                    value={ attributes.message }\n                    onChange={ ( val ) => setAttributes( { message: val } ) }\n                    style={ {\n                        backgroundColor: attributes.bg_color,\n                        color: attributes.text_color,\n                    } }\n                />\n            </div>\n        );\n    },\n    save: ( { attributes } ) => {\n        return (\n            <div\n                { ...useBlockProps.save() }\n                style={ {\n                    backgroundColor: attributes.bg_color,\n                    color: attributes.text_color,\n                } }\n            >\n                { attributes.message }\n            </div>\n        );\n    },\n} );","import { registerBlockType } from '@wordpress/blocks';\n\nimport {\n     useBlockProps,\n     RichText,\n     AlignmentToolbar,\n     BlockControls,\n} from '@wordpress/block-editor';\n\nimport { TextControl } from '@wordpress/components';\n\nimport './style.scss';\n\nregisterBlockType('myblocks/zaz-textalignmentoolbar-block', {\n     apiVersion: 3,\n     title: 'ZAZ - Richtext alignment',\n     icon: 'universal-access-alt',\n     category: 'design',\n     attributes: {\n          content: {\n               type: 'string',\n               source: 'html',\n               selector: 'p',\n          },\n          title: {\n               type: 'string',\n               source: 'html',\n               selector: 'h1',\n               className: 'title',\n               default: '',\n          },\n          alignment: {\n               type: 'string',\n               default: 'none',\n          },\n     },\n     example: {\n          attributes: {\n               title :   'Title',\n               content: 'Hello World',\n               alignment: 'right',\n\n          },\n     },\n\n     edit: ({ attributes, setAttributes }) => {\n          const onChangeContent = (newContent) => {\n               setAttributes({ content: newContent });\n          };\n\n          const onChangeAlignment = (newAlignment) => {\n               setAttributes({\n                    alignment: newAlignment === undefined ? 'none' : newAlignment,\n               });\n          };\n          const onChageTitle = (newTitle) => {\n               setAttributes({ title: newTitle });\n          }\n\n          return (\n               <div {...useBlockProps()}>\n                    {\n                         <BlockControls>\n                              <AlignmentToolbar\n                                   value={attributes.alignment}\n                                   onChange={onChangeAlignment}\n                              />\n\n                         </BlockControls>\n                    }\n                    <TextControl\n                         label=\"Title\"\n                         value={attributes.title}\n                         onChange={onChageTitle}\n                         className='title'\n                    />\n                    <RichText\n                         className={'rich-text-custom-style'}\n                         style={{ textAlign: attributes.alignment }}\n                         tagName=\"p\"\n                         onChange={onChangeContent}\n                         value={attributes.content}\n                         placeholder={'Add your custom text here'}\n                    />\n               </div>\n          );\n     },\n     save: (props) => {\n          const blockProps = useBlockProps.save();\n          return (\n               <div {...blockProps}>\n                    {props.attributes.title ?\n                         <RichText.Content\n                              className={`gutenberg-examples-align-${props.attributes.alignment}`}\n                              tagName=\"h1\"\n                              value={props.attributes.title}\n                         /> :\n                         <RichText.Content\n                              className={`gutenberg-examples-align-${props.attributes.alignment}`}\n                              tagName=\"h1\"\n                              value=\"Title\"\n                              wp-block-myblocks-zaz-textalignmentoolbar-block           />\n                    }\n                    <RichText.Content\n                         className={`gutenberg-examples-align-${props.attributes.alignment} title`}\n                         tagName=\"p\"\n                         value={props.attributes.content}\n                         style={{ textAlign: props.attributes.alignment }}\n                    />\n               </div>\n          );\n     },\n});","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"index\": 0,\n\t\"./style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkmyblocks\"] = globalThis[\"webpackChunkmyblocks\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"./style-index\"], () => (__webpack_require__(\"./src/index.jsx\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["registerBlockType","InspectorControls","PanelColorSettings","RichText","PanelBody","RangeControl","title","icon","category","attributes","content","type","source","selector","backgroundColor","default","textColor","edit","setAttributes","createElement","style","color","padding","colorSettings","label","value","onChange","newColor","tagName","newContent","save","Content","__","useBlockProps","Edit","metadata","TextControl","ColorPalette","apiVersion","message","bg_color","text_color","onChangeBGColor","hexColor","onChangeTextColor","key","id","className","val","AlignmentToolbar","BlockControls","alignment","example","onChangeContent","onChangeAlignment","newAlignment","undefined","onChageTitle","newTitle","textAlign","placeholder","props","blockProps"],"sourceRoot":""}